// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using svc_InterviewBack.DAL;

#nullable disable

namespace svc_InterviewBack.Migrations
{
    [DbContext(typeof(InterviewDbContext))]
    [Migration("20240509140636_1_InitDb")]
    partial class _1_InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("svc_InterviewBack.DAL.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SeasonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.InterviewRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("StudentId");

                    b.ToTable("InterviewRequests");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Season", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("InterviewEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("InterviewStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SeasonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Company", b =>
                {
                    b.HasOne("svc_InterviewBack.DAL.Season", null)
                        .WithMany("Companies")
                        .HasForeignKey("SeasonId");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.InterviewRequest", b =>
                {
                    b.HasOne("svc_InterviewBack.DAL.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svc_InterviewBack.DAL.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Position", b =>
                {
                    b.HasOne("svc_InterviewBack.DAL.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Student", b =>
                {
                    b.HasOne("svc_InterviewBack.DAL.Season", null)
                        .WithMany("Students")
                        .HasForeignKey("SeasonId");
                });

            modelBuilder.Entity("svc_InterviewBack.DAL.Season", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
